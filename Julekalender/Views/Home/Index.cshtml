@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1 id="countdown"></h1>
    <h1 id="name"></h1>
                
    @*<p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
        <p><a href="http://asp.net" class="btn btn-primary btn-large">Learn more &raquo;</a></p>*@
    <p></p>
    <p></p>
</div>
@section scripts {
    <script src="~/Scripts/JSSnow/js/ThreeCanvas.js"></script>
    <script src="~/Scripts/JSSnow/js/Snow.js"></script>
    <script src="~/Scripts/jquery.flip.js"></script>

    <script type="text/javascript">
        $(function () {
            $("#countdown").html("Starting...");
            var countDownHub = $.connection.countDownHub;
            countDownHub.client.upDateCountdown = function (timer) {
                $("#countdown").text(timer);
            };

            countDownHub.client.letItSnow = function (name) {
                var elem = $("#name");
                elem.text(name);
                elem.fadeIn(1000);
                init();
            };

            countDownHub.client.prepareDraw = function () {
                $("#countdown").fadeOut(3000, function () { $("#name").fadeIn(3000); });

            };

            countDownHub.client.showName = function (name, delay) {
                var elem = $("#name");
                elem.text(name);
                var duration = Math.floor(delay / 2);
                elem.fadeIn(duration, function() { elem.fadeOut(duration) });
            };

            $.connection.hub.start();
        });

        var SCREEN_WIDTH = window.innerWidth;
        var SCREEN_HEIGHT = window.innerHeight;

        var container;

        var particle;

        var camera;
        var scene;
        var renderer;

        var mouseX = 0;
        var mouseY = 0;

        var windowHalfX = window.innerWidth / 2;
        var windowHalfY = window.innerHeight / 2;

        var particles = [];
        var particleImage = new Image();//THREE.ImageUtils.loadTexture( "img/ParticleSmoke.png" );
        particleImage.src = "/Scripts/JSSnow/img/ParticleSmoke.png"; // />/img/ParticleSmoke.png';



        function init() {

            var container = $('<div/>', {
                "class": "snowcanvas"
            }).appendTo("body").fadeIn(3000);
            //container = document.createElement('div');
            //container.className = "snowcanvas";
            //document.body.appendChild(container);

            camera = new THREE.PerspectiveCamera(75, SCREEN_WIDTH / SCREEN_HEIGHT, 1, 10000);
            camera.position.z = 1000;

            scene = new THREE.Scene();
            scene.add(camera);

            renderer = new THREE.CanvasRenderer();
            renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);
            var material = new THREE.ParticleBasicMaterial({ map: new THREE.Texture(particleImage) });

            for (var i = 0; i < 500; i++) {

                particle = new Particle3D(material);
                particle.position.x = Math.random() * 2000 - 1000;
                particle.position.y = Math.random() * 2000 - 1000;
                particle.position.z = Math.random() * 2000 - 1000;
                particle.scale.x = particle.scale.y = 1;
                scene.add(particle);

                particles.push(particle);
            }

            container.get(0).appendChild(renderer.domElement);


            document.addEventListener('mousemove', onDocumentMouseMove, false);
            document.addEventListener('touchstart', onDocumentTouchStart, false);
            document.addEventListener('touchmove', onDocumentTouchMove, false);

            setInterval(loop, 1000 / 60);

        }

        function onDocumentMouseMove(event) {

            mouseX = event.clientX - windowHalfX;
            mouseY = event.clientY - windowHalfY;
        }

        function onDocumentTouchStart(event) {

            if (event.touches.length == 1) {

                event.preventDefault();

                mouseX = event.touches[0].pageX - windowHalfX;
                mouseY = event.touches[0].pageY - windowHalfY;
            }
        }

        function onDocumentTouchMove(event) {

            if (event.touches.length == 1) {

                event.preventDefault();

                mouseX = event.touches[0].pageX - windowHalfX;
                mouseY = event.touches[0].pageY - windowHalfY;
            }
        }

        //

        function loop() {

            for (var i = 0; i < particles.length; i++) {

                var particle = particles[i];
                particle.updatePhysics();

                with (particle.position) {
                    if (y < -1000) y += 2000;
                    if (x > 1000) x -= 2000;
                    else if (x < -1000) x += 2000;
                    if (z > 1000) z -= 2000;
                    else if (z < -1000) z += 2000;
                }
            }

            camera.position.x += (mouseX - camera.position.x) * 0.05;
            camera.position.y += (-mouseY - camera.position.y) * 0.05;
            camera.lookAt(scene.position);

            renderer.render(scene, camera);


        }

    </script>
}
